{{- if and .Values.updateDockerImages.enabled .Values.pipeline.giteaSshPrivateKey }}
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  namespace: {{ .Values.pipeline.namespace }}
  name: {{ .Values.pipeline.name }}-csharp-build-and-push-images
spec:
  params:
  - name: branch
    type: string
  - name: repository
    type: string
  workspaces:
    - name: gitrepo
      mountPath: /workspaces/git-repository
  steps:
    - name: git-checkout-branch
      resources: {}
      volumeMounts:
        - name: gitea-ssh-private-key
          mountPath: /var/.ssh
      image: alpine/git:v2.49.0
      script: |
        mkdir -p /root/.ssh
        cp /var/.ssh/id_rsa ~/.ssh/id_rsa
        chmod 600 /root/.ssh/id_rsa
        
        ssh-keyscan -p 22 gitea-ssh.gitea.svc.cluster.local >> ~/.ssh/known_hosts

        echo 'Cloning repository: $(params.repository)'
        echo 'Cloning branch: $(params.branch)'
        git clone ssh://git@gitea-ssh.gitea.svc.cluster.local/$(params.repository).git -b $(params.branch)
        cp -r test/ $(workspaces.gitrepo.path)
    # replace test/ with the actual repository (not full) name.
    - name: find-and-build-images
      resources: {}
      volumeMounts:
        - name: harbor-robot-account-credentials
          mountPath: /.docker
      image: moby/buildkit:latest
      shell: bash
      script: |
        #!/bin/bash
        shopt -s globstar
        for file in $(workspaces.gitrepo.path)/test/**/Dockerfile; do
          folder=$(dirname "$file")
          echo "Processing $file"
          echo "Getting version from $folder/Directory.Build.props"

          if [ ! -e $folder/Directory.Build.props ]; then
            echo "$folder/Directory.Build.props does not exist"
            exit 1
          fi

          solutionVersion=$(<$folder/Directory.Build.props)
          echo "Found version: $solutionVersion"

          buildctl --addr tcp://buildkit.buildkit.svc.cluster.local:1234 \
            build \
            --frontend Dockerfile \
            --local context=. \
            --local dockerfile=$file \
            --output type=image,name=harbor.internal.sealeo.io/bingo/test-image:$solutionVersion,push=true

        done
  volumes:
    - name: gitea-ssh-private-key
      secret: 
        secretName: {{ .Values.pipeline.name }}-ssh-key
    - name: harbor-robot-account-credentials
      secret:
        secretName: {{ .Values.pipeline.name }}-harbor-robot-account-credentials
{{- end }}