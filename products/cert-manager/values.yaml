cert-manager:
  global:
    rbac:
      create: true
      aggregateClusterRoles: true

    podSecurityPolicy:
      enabled: false
      useAppArmor: true

    logLevel: 2
  
  crds:
    enabled: true
    keep: true

  replicaCount: 1

  podDisruptionBudget:
    enabled: false
    # minAvailable: 1
    # maxUnavailable: 1

  serviceAccount:
    create: true

  extraArgs: []

  extraEnv: []
  
  resources: {}

  securityContext:
    runAsNonRoot: true

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true

  prometheus:
    enabled: false

    servicemonitor:
      enabled: false
      prometheusInstance: default
      targetPort: 9402
      path: /metrics
      interval: 60s
      scrapeTimeout: 30s
      labels: {}
      annotations: {}
      honorLabels: false
      endpointAdditionalProperties: {}

    podmonitor:
      enabled: false
  
  webhook:
    replicaCount: 1
    timeoutSeconds: 30

    podDisruptionBudget:
      enabled: false
      # minAvailable: 1
      # maxUnavailable: 1

    serviceAccount:
      create: true

  cainjector:
    enabled: true
    serviceAccount:
      create: true

  startupapicheck:
    enabled: true

    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

    timeout: 1m
    backoffLimit: 4

    rbac:
      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-weight: "-5"
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded

    serviceAccount:
      create: true

      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-weight: "-5"
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
